[{"id":"f73ba5ab.95d308","type":"ibmiot in","z":"cb147eb5.d4c7e8","authentication":"boundService","apiKey":"","inputType":"evt","deviceId":"","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"IBM IoT App In","service":"registered","allDevices":false,"allApplications":false,"allDeviceTypes":true,"allEvents":true,"allCommands":false,"allFormats":false,"x":176,"y":419,"wires":[["885740b8.dbb4e8"]]},{"id":"885740b8.dbb4e8","type":"debug","z":"cb147eb5.d4c7e8","name":"device data","active":true,"console":"false","complete":"true","x":386,"y":499,"wires":[]},{"id":"b06486ae.947688","type":"ibmiot out","z":"cb147eb5.d4c7e8","authentication":"boundService","apiKey":"","outputType":"cmd","deviceId":"dronepi","deviceType":"DJI_Drone","eventCommandType":"turnRight","format":"json","data":"temp:10","qos":"","name":"Send to IBM IoT Platform","service":"registered","x":646,"y":139,"wires":[]},{"id":"ce430171.d5829","type":"inject","z":"cb147eb5.d4c7e8","name":"Send Data","topic":"","payload":"true","payloadType":"bool","repeat":"","crontab":"","once":false,"x":176,"y":139,"wires":[["7619ea0e.5bcefc"]]},{"id":"7619ea0e.5bcefc","type":"function","z":"cb147eb5.d4c7e8","name":"Close","func":"// Thermostat's location:\nvar longitude1 = -98.49;\nvar latitude1 = 29.42;\n\n// Array of pseudo random temperatures\nvar temp1 = [15,17,18.5,20,21.5,23,24,22.2,19,18];\n\n// Array of pseudo random relative humidities\nvar humidity1 = [50,55,61,68,65,60,53,49,45,47];\n\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 9) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: JSON.stringify(\n    {\n      d:{\n          \"action\" : \"motorClose\",  \n          \"pulseWidth\" : 1500, \n        \"increment\": 0,\n        \"interval\": 250,\n        \"stopat\": 1501,\n        \"motorSpin\": 900,\n           \"turn\" : 1500,\n        \"temp\" : temp1[counter1],\n        \"humidity\" : humidity1[counter1],\n        \"location\" :\n        {\n          \"longitude\" : longitude1,\n          \"latitude\" : latitude1\n        },\n      }\n    }\n  )\n};\nmsg.eventOrCommandType = \"motorClose\";\nreturn msg;\n","outputs":1,"noerr":0,"x":366,"y":139,"wires":[["b06486ae.947688","d01e1e7f.964f08"]]},{"id":"d01e1e7f.964f08","type":"debug","z":"cb147eb5.d4c7e8","name":"todrone","active":true,"console":"false","complete":"payload","x":596,"y":199,"wires":[]},{"id":"51fe8470.de4894","type":"comment","z":"cb147eb5.d4c7e8","name":"1. Configure target","info":"","x":626,"y":99,"wires":[]},{"id":"430c61d2.7b6ab","type":"comment","z":"cb147eb5.d4c7e8","name":"2. Click to send data","info":"To automatically send data:\n1. Change *Repeat* to interval.\n2. Click Deploy button.\n","x":186,"y":179,"wires":[]},{"id":"273032b2.d3b7e6","type":"comment","z":"cb147eb5.d4c7e8","name":"Configure source","info":"","x":176,"y":379,"wires":[]},{"id":"cb2eb000.6ecd58","type":"function","z":"cb147eb5.d4c7e8","name":"Open","func":"// Thermostat's location:\nvar longitude1 = -98.49;\nvar latitude1 = 29.42;\n\n// Array of pseudo random temperatures\nvar temp1 = [15,17,18.5,20,21.5,23,24,22.2,19,18];\n\n// Array of pseudo random relative humidities\nvar humidity1 = [50,55,61,68,65,60,53,49,45,47];\n\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 9) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: JSON.stringify(\n    {\n      d:{\n        \"action\" : \"motorOpen\", \n        \"pulseWidth\" : 1500, \n        \"increment\": 0,\n        \"interval\": 250,\n        \"stopat\": 1501,\n        \"motorSpin\": 1800,\n        \"turn\" : 500,\n        \"temp\" : temp1[counter1],\n        \"humidity\" : humidity1[counter1],\n        \"location\" :\n        {\n          \"longitude\" : longitude1,\n          \"latitude\" : latitude1\n        },\n      }\n    }\n  )\n};\nmsg.eventOrCommandType = \"motorOpen\";\nreturn msg;\n","outputs":1,"noerr":0,"x":343,"y":224,"wires":[["d01e1e7f.964f08","b06486ae.947688"]]},{"id":"3a2b82c2.b733f6","type":"inject","z":"cb147eb5.d4c7e8","name":"Send Data","topic":"","payload":"true","payloadType":"bool","repeat":"","crontab":"","once":false,"x":170,"y":224,"wires":[["cb2eb000.6ecd58"]]},{"id":"6fbc017a.51c1c8","type":"ui_gauge","z":"cb147eb5.d4c7e8","tab":"5a984b35.59396c","name":"Motor","group":"","order":1,"format":"{{value}}","min":0,"max":10,"x":660.5,"y":436,"wires":[]},{"id":"d3a86367.9936b8","type":"inject","z":"cb147eb5.d4c7e8","name":"Send Data","topic":"","payload":"111","payloadType":"json","repeat":"","crontab":"","once":false,"x":491,"y":449,"wires":[["6fbc017a.51c1c8"]]},{"id":"9f69ab29.921e4","type":"ui_button","z":"cb147eb5.d4c7e8","tab":"5a984b35.59396c","name":"Open","payload":"{500}","topic":"motorOpen","group":"","order":1,"x":613.5,"y":341,"wires":[["59321da1.6b5f4c","99889348.2090f","53bfe7d9.da3b48"]]},{"id":"59321da1.6b5f4c","type":"debug","z":"cb147eb5.d4c7e8","name":"ui  data","active":true,"console":"false","complete":"true","x":796,"y":401,"wires":[]},{"id":"220c33b4.250eac","type":"ui_button","z":"cb147eb5.d4c7e8","tab":"5a984b35.59396c","name":"Close","payload":"{1500}","topic":"motorClose","group":"","order":1,"x":621,"y":288,"wires":[["59321da1.6b5f4c","99889348.2090f","53bfe7d9.da3b48"]]},{"id":"99889348.2090f","type":"switch","z":"cb147eb5.d4c7e8","name":"CheckAction","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"motorOpen","vt":"str"},{"t":"eq","v":"motorClose","vt":"str"},{"t":"else"}],"checkall":"true","outputs":3,"x":813.5,"y":297.75,"wires":[["cb2eb000.6ecd58"],["7619ea0e.5bcefc"],[]]},{"id":"53bfe7d9.da3b48","type":"function","z":"cb147eb5.d4c7e8","name":"","func":"if (msg.topic == \"motorOpen\")\n    msg.payload = 00;\nif (msg.topic == \"motorClose\")\n    msg.payload = 1500;\n\n\nreturn msg;","outputs":1,"noerr":0,"x":480.5,"y":389.75,"wires":[["6fbc017a.51c1c8"]]},{"id":"5a984b35.59396c","type":"ui_tab","z":"","name":"HomeDemo","icon":"dashboard","order":"1"}]
